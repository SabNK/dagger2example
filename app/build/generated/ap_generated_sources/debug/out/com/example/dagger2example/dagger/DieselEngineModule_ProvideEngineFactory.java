// Generated by Dagger (https://dagger.dev).
package com.example.dagger2example.dagger;

import com.example.dagger2example.car.Engine;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DieselEngineModule_ProvideEngineFactory implements Factory<Engine> {
  private final DieselEngineModule module;

  public DieselEngineModule_ProvideEngineFactory(DieselEngineModule module) {
    this.module = module;
  }

  @Override
  public Engine get() {
    return provideEngine(module);
  }

  public static DieselEngineModule_ProvideEngineFactory create(DieselEngineModule module) {
    return new DieselEngineModule_ProvideEngineFactory(module);
  }

  public static Engine provideEngine(DieselEngineModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideEngine());
  }
}
