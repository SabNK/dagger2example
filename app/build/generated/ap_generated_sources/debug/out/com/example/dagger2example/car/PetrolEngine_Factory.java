// Generated by Dagger (https://dagger.dev).
package com.example.dagger2example.car;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata("javax.inject.Named")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PetrolEngine_Factory implements Factory<PetrolEngine> {
  private final Provider<Integer> horsepowerProvider;

  private final Provider<Integer> engineCapacityProvider;

  public PetrolEngine_Factory(Provider<Integer> horsepowerProvider,
      Provider<Integer> engineCapacityProvider) {
    this.horsepowerProvider = horsepowerProvider;
    this.engineCapacityProvider = engineCapacityProvider;
  }

  @Override
  public PetrolEngine get() {
    return newInstance(horsepowerProvider.get(), engineCapacityProvider.get());
  }

  public static PetrolEngine_Factory create(Provider<Integer> horsepowerProvider,
      Provider<Integer> engineCapacityProvider) {
    return new PetrolEngine_Factory(horsepowerProvider, engineCapacityProvider);
  }

  public static PetrolEngine newInstance(int horsepower, int engineCapacity) {
    return new PetrolEngine(horsepower, engineCapacity);
  }
}
